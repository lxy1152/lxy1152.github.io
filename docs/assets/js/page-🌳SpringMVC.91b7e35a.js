(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{708:function(s,o,t){"use strict";t.r(o);var e=t(1),r=Object(e.a)({},(function(){var s=this,o=s.$createElement,t=s._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"spring-mvc-的请求流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc-的请求流程"}},[s._v("#")]),s._v(" Spring MVC 的请求流程？")]),s._v(" "),t("div",{staticClass:"custom-block center"},[t("p",[t("img",{attrs:{src:"https://i.loli.net/2021/07/31/7Po6lweIR3ntqsy.png",alt:"SpringMVC流程图.jpg"}})])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("基本不会有视图渲染的过程")]),s._v(" "),t("p",[s._v("由于现在基本都是前后端分离开发，所以上图已经不适用了。步骤 7 就会返回最终结果，不再需要后续的视图解析与渲染。")])]),s._v(" "),t("h2",{attrs:{id:"restcontroller-和-controller-注解有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restcontroller-和-controller-注解有什么区别"}},[s._v("#")]),s._v(" @RestController 和 @Controller 注解有什么区别？")]),s._v(" "),t("h3",{attrs:{id:"使用-controller-注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-controller-注解"}},[s._v("#")]),s._v(" 使用 @Controller 注解")]),s._v(" "),t("p",[s._v("单独使用 "),t("code",[s._v("@Controller")]),s._v(" 不加 "),t("code",[s._v("@ResponseBody")]),s._v(" 注解一般使用在要返回一个视图的情况，这种情况属于比较传统的 Spring MVC 的应用，对应于前后端不分离的情况。如果需要在 Spring4 之前开发 RESTFul Web 服务的话，需要使用 "),t("code",[s._v("@Controller")]),s._v(" 并结合 "),t("code",[s._v("@ResponseBody")]),s._v(" 注解，也就是说 "),t("code",[s._v("@Controller + @ResponseBody = @RestController")]),s._v("（Spring 4 之后新加的注解）。")]),s._v(" "),t("h3",{attrs:{id:"使用-restcontroller-注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-restcontroller-注解"}},[s._v("#")]),s._v(" 使用 @RestController 注解")]),s._v(" "),t("p",[t("code",[s._v("@RestController")]),s._v(" 只返回对象，对象数据直接以 JSON 或 XML 形式写入 HTTP Response 中，这种情况属于 RESTFul Web 服务，这也是目前日常开发所接触的最常用的情况。")]),s._v(" "),t("h2",{attrs:{id:"cookie-和-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session"}},[s._v("#")]),s._v(" Cookie 和 Session")]),s._v(" "),t("h3",{attrs:{id:"什么是-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie"}},[s._v("#")]),s._v(" 什么是 Cookie？")]),s._v(" "),t("p",[s._v("Cookie 一般用来保存用户信息，比如：")]),s._v(" "),t("ul",[t("li",[s._v("替用户填入基本信息")]),s._v(" "),t("li",[s._v("保存用户的登录状态（一般是一个 token）")])]),s._v(" "),t("h3",{attrs:{id:"什么是-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-session"}},[s._v("#")]),s._v(" 什么是 Session？")]),s._v(" "),t("p",[s._v("Session 的主要作用是通过服务端记录用户的状态。因为 HTTP 协议是无状态的，服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了。")]),s._v(" "),t("h3",{attrs:{id:"cookie-和-session-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的区别"}},[s._v("#")]),s._v(" Cookie 和 Session 的区别？")]),s._v(" "),t("p",[s._v("Cookie 数据保存在客户端，Session 数据保存在服务器端，所以相对来说 Session 安全性更高，最好不要在 Cookie 中保存敏感信息。Cookie 可以手动设置过期时间，Session 在关闭浏览器后就关闭了。")])])}),[],!1,null,null,null);o.default=r.exports}}]);