(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{733:function(t,e,r){"use strict";r.r(e);var s=r(1),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"linkedlist-的底层实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist-的底层实现"}},[t._v("#")]),t._v(" LinkedList 的底层实现？"),r("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),r("p",[t._v("基于双向链表实现，使用静态内部类 "),r("code",[t._v("Node")]),t._v(" 作为链表中的节点。")]),t._v(" "),r("h2",{attrs:{id:"与-arraylist-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#与-arraylist-的区别"}},[t._v("#")]),t._v(" 与 ArrayList 的区别？"),r("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),r("p",[r("code",[t._v("ArrayList")]),t._v(" 基于动态数组实现，"),r("code",[t._v("LinkedList")]),t._v(" 基于双向链表实现。"),r("code",[t._v("ArrayList")]),t._v(" 和 "),r("code",[t._v("LinkedList")]),t._v(" 的区别可以归结为数组和链表的区别：")]),t._v(" "),r("ul",[r("li",[t._v("数组支持随机访问，但插入删除的代价很高，需要移动大量元素")]),t._v(" "),r("li",[t._v("链表不支持随机访问，但插入删除只需要改变指针")])])])}),[],!1,null,null,null);e.default=a.exports}}]);