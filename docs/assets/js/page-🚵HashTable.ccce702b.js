(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{728:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"hashtable-是如何保证线程安全的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashtable-是如何保证线程安全的"}},[t._v("#")]),t._v(" HashTable 是如何保证线程安全的？")]),t._v(" "),e("p",[t._v("使用 "),e("code",[t._v("synchronized")]),t._v(" 关键字，保证线程安全。")]),t._v(" "),e("h2",{attrs:{id:"hashtable-的替代方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashtable-的替代方案"}},[t._v("#")]),t._v(" HashTable 的替代方案？"),e("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),e("p",[e("code",[t._v("HashTable")]),t._v(" 效率低，同时它是遗留类，不要主动的去使用它。如果需要保证线程安全可以使用 "),e("code",[t._v("ConcurrentHashMap")]),t._v("，它在 JDK7 中使用了分段锁，在 JDK8 中使用了 CAS 操作来支持更高的并发度，执行效率更高。")])])}),[],!1,null,null,null);a.default=r.exports}}]);