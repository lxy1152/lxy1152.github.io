(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{732:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"arraylist-的底层实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-的底层实现"}},[t._v("#")]),t._v(" ArrayList 的底层实现？"),a("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),a("p",[a("code",[t._v("ArrayList")]),t._v(" 是基于数组实现的，所以支持快速随机访问。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("快速随机访问")]),t._v(" "),a("p",[a("code",[t._v("ArrayList")]),t._v(" 类实现了 "),a("code",[t._v("RandomAccess")]),t._v(" 接口，这个接口是一个标记接口，实现这个接口的类，表示它支持快速随机访问，直接使用 "),a("code",[t._v("for")]),t._v(" 循环会比使用迭代器循环要快。")])]),t._v(" "),a("h2",{attrs:{id:"arraylist-的默认大小是多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-的默认大小是多少"}},[t._v("#")]),t._v(" ArrayList 的默认大小是多少？"),a("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),a("p",[t._v("在代码中可以看到默认大小是 10。")]),t._v(" "),a("h2",{attrs:{id:"arraylist-的扩容机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-的扩容机制"}},[t._v("#")]),t._v(" ArrayList 的扩容机制？"),a("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),a("p",[t._v("在添加元素时使用 "),a("code",[t._v("ensureCapacityInternal()")]),t._v(" 保证容量足够，如果容量不够，会使用 "),a("code",[t._v("grow()")]),t._v(" 方法进行扩容。新的容量为："),a("code",[t._v("oldCapacity + (oldCapacity >> 1)")]),t._v("，近似是 1.5 倍。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("尽量避免扩容")]),t._v(" "),a("p",[t._v("扩容操作会将原数组的部分内容全部复制到新数组中，这个操作的代价很高，应该尽量减少扩容操作的次数。")])]),t._v(" "),a("h2",{attrs:{id:"arraylist-如何删除元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-如何删除元素"}},[t._v("#")]),t._v(" ArrayList 如何删除元素？"),a("Badge",{attrs:{text:"重点",type:"error"}})],1),t._v(" "),a("p",[t._v("在删除元素时会调用 "),a("code",[t._v("System.arraycopy()")]),t._v(" 将 "),a("code",[t._v("index + 1")]),t._v(" 后面的元素都复制到 "),a("code",[t._v("index")]),t._v(" 位置上，时间复杂度是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("n")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("，代价同样很大。")]),t._v(" "),a("h2",{attrs:{id:"arraylist-的序列化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-的序列化"}},[t._v("#")]),t._v(" ArrayList 的序列化？")]),t._v(" "),a("p",[a("code",[t._v("ArrayList")]),t._v(" 基于数组实现，并且具有动态扩容特性，因此保存元素的数组可能只有其中一部分是真正使用了的，因此就没必要全部进行序列化。因此保存元素的数组 "),a("code",[t._v("elementData")]),t._v(" 使用了 "),a("code",[t._v("transient")]),t._v(" 关键字进行修饰，该关键字表示数组默认不会被序列化。同时 "),a("code",[t._v("ArrayList")]),t._v(" 通过重新实现 "),a("code",[t._v("readObject()")]),t._v(" 和 "),a("code",[t._v("writeObject()")]),t._v(" 来控制只序列化有元素的那部分内容。")]),t._v(" "),a("h2",{attrs:{id:"什么是-fail-fast-机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-fail-fast-机制"}},[t._v("#")]),t._v(" 什么是 fail-fast 机制？")]),t._v(" "),a("p",[t._v("fail-fast（快速失败）机制，是集合类中提供的一种错误检测机制。如果在迭代过程中，该集合在结构上发生改变，那么就有可能会发生 fail-fast，抛出 "),a("code",[t._v("ConcurrentModificationException")]),t._v(" 异常。")]),t._v(" "),a("p",[t._v("fail-fast 机制并不保证在不同步的修改下一定会抛出异常，它只是尽最大努力去抛出，所以这种机制一般仅用于检测 bug。最简单的触发方式就是在遍历过程中执行删除元素的操作，比如下面的代码：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("结构变化")]),t._v(" "),a("p",[t._v("结构发生改变是指："),a("strong",[t._v("添加或者删除至少一个元素，或者调整列表的大小")]),t._v("。涉及这些操作的时候，内部的计数器 "),a("code",[t._v("modCount")]),t._v(" 会自增，如果迭代过程中 "),a("code",[t._v("modCount")]),t._v(" 发生变化（不相等），就会抛出异常。为了避免抛出 "),a("code",[t._v("ConcurrentModificationException")]),t._v(" 异常，需要使用迭代器提供的 "),a("code",[t._v("remove()")]),t._v(" 方法来删除元素。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);