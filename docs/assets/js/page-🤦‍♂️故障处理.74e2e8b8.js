(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{802:function(v,_,t){"use strict";t.r(_);var l=t(1),s=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"缓存穿透应该怎么处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透应该怎么处理"}},[v._v("#")]),v._v(" 缓存穿透应该怎么处理？")]),v._v(" "),t("p",[v._v("缓存穿透指："),t("strong",[v._v("大量请求肯定不存在于缓存和数据库中的 key")]),v._v("，使请求全部落到了数据库上，就好像没有缓存一样，直接穿透了。解决方案：")]),v._v(" "),t("ul",[t("li",[v._v("做好参数校验：对于不合理的参数即时返回错误信息")]),v._v(" "),t("li",[v._v("把无效 "),t("code",[v._v("key")]),v._v(" 缓存起来：这种方式是治标不治本，可能会导致在 Redis 中缓存大量的无效 "),t("code",[v._v("key")]),v._v("，如果需要使用方式，建议将过期时间尽可能的设置短一些")]),v._v(" "),t("li",[v._v("使用布隆过滤器：在判断缓存前，优先在布隆过滤器中判断，需要注意的是：布隆过滤器可能会误判，因为哈希相同但原对象可能不同")])]),v._v(" "),t("p",[v._v("为什么会出现误判的情况呢？先来看一下，当一个元素加入布隆过滤器中的时候，会进行哪些操作：")]),v._v(" "),t("ul",[t("li",[v._v("使用布隆过滤器中的哈希函数对元素值进行计算，得到哈希值（有几个哈希函数得到几个哈希值）")]),v._v(" "),t("li",[v._v("根据得到的哈希值，在位数组中把对应下标的值置为 1")])]),v._v(" "),t("p",[v._v("再来看一下，当需要判断一个元素是否存在于布隆过滤器的时候，会进行哪些操作：")]),v._v(" "),t("ul",[t("li",[v._v("对给定元素再次进行相同的哈希计算")]),v._v(" "),t("li",[v._v("得到值之后判断位数组中的每个元素是否都为 1，如果值都为 1，那么说明这个值在布隆过滤器中，如果存在一个值不为 1，说明该元素不在布隆过滤器中")])]),v._v(" "),t("p",[v._v("然后，一定会出现这样一种情况：不同的字符串可能哈希出来的位置相同（可以适当增加位数组大小或者调整我们的哈希函数来降低概率），因此可能会发生哈希冲突。"),t("strong",[v._v("所以如果布隆过滤器判断某个元素不存在，那么它一定不存在；如果判断某个元素存在，它是可能存在。")])]),v._v(" "),t("div",{staticClass:"custom-block center"},[t("p",[t("img",{attrs:{src:"https://i.loli.net/2021/07/31/4zWsckj8LINeunb.png",alt:"布隆过滤器.jpg"}})])]),v._v(" "),t("h2",{attrs:{id:"缓存击穿应该怎么处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿应该怎么处理"}},[v._v("#")]),v._v(" 缓存击穿应该怎么处理？")]),v._v(" "),t("p",[v._v("缓存击穿指："),t("strong",[v._v("同时有大量的查询请求去查询一个缓存中肯定没有（可能刚刚失效）但数据库中存在的数据")]),v._v("，这往往发生在第一次请求缓存数据或者缓存数据到期的时候。解决方案：")]),v._v(" "),t("ul",[t("li",[v._v("采用分级缓存：采用 L1 一级缓存（失效时间短）和 L2 二级缓存（失效时间长）结合使用的方式，首先请求 L1，如果 L1 中没有元素则加锁，使一个线程从数据库中获取值并更新 L1 和 L2 缓存，但是这种方案可能会导致 L2 中存在脏数据，同时会占用更大的内存")]),v._v(" "),t("li",[v._v("加互斥锁：确保同一时间只有一个线程在查询数据库并更新缓存")]),v._v(" "),t("li",[v._v("设置热点数据永不失效")]),v._v(" "),t("li",[v._v("接口限流、熔断、降级")])]),v._v(" "),t("h2",{attrs:{id:"缓存雪崩应该怎么处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩应该怎么处理"}},[v._v("#")]),v._v(" 缓存雪崩应该怎么处理？")]),v._v(" "),t("p",[v._v("缓存雪崩是指："),t("strong",[v._v("缓存在同一时间大面积的失效或者数据未加载到缓存中，使请求直接落到了数据库上")]),v._v("，造成数据库短时间内承受大量请求，就像发生了雪崩一样。解决方案：")]),v._v(" "),t("ul",[t("li",[v._v("如果是 Redis 服务不可用导致的缓存雪崩\n"),t("ul",[t("li",[v._v("采用 Redis 集群，避免单机出现问题整个缓存服务都没办法使用")]),v._v(" "),t("li",[v._v("接口限流、熔断、降级")])])]),v._v(" "),t("li",[v._v("如果是热点缓存失效导致的缓存雪崩\n"),t("ul",[t("li",[v._v("设置不同的失效时间，比如随机设置缓存的失效时间")]),v._v(" "),t("li",[v._v("设置为缓存永不失效")]),v._v(" "),t("li",[v._v("接口限流、熔断、降级")])])])]),v._v(" "),t("h2",{attrs:{id:"热点数据失效怎么处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#热点数据失效怎么处理"}},[v._v("#")]),v._v(" 热点数据失效怎么处理？")]),v._v(" "),t("p",[v._v("热点数据是访问率比较高的数据，"),t("strong",[v._v("当热点数据集中的数据缓存同时失效后可能会使大量的请求落到数据库上")]),v._v("，从而导致数据库崩溃。解决方案：")]),v._v(" "),t("ul",[t("li",[v._v("设置不同的失效时间，比如随机设置缓存的失效时间")]),v._v(" "),t("li",[v._v("设置缓存为永不失效")]),v._v(" "),t("li",[v._v("接口限流、熔断、降级")])])])}),[],!1,null,null,null);_.default=s.exports}}]);